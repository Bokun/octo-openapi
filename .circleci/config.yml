defaults: &defaults
  working_directory: /tmp/workspace

parameters:
  run_print_version:
    type: boolean
    default: false

version: 2.1
jobs:
  build:
    <<: *defaults
    docker:
      - image: 991828066748.dkr.ecr.us-east-1.amazonaws.com/circleci_docker_images:java17aws_v1
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
    steps:
      - checkout
      - restore_cache:
          key: build-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Branch }}-{{ checksum "build.gradle" }}
      - run:
          name: Run gradle build
          command: |
            ./gradlew build
      - run:
          name: Publish artifacts to repository
          command: |
            ./gradlew publish
      - store_artifacts:
          path: build/reports
          destination: reports
      - store_test_results:
          path: build/test-results
      - save_cache:
          key: build-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Branch }}-{{ checksum "build.gradle" }}
          paths:
            - ~/.gradle
  print-version:
    <<: *defaults
    docker:
      - image: 991828066748.dkr.ecr.us-east-1.amazonaws.com/circleci_docker_images:java17aws_v1
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
    steps:
      - checkout
      - restore_cache:
          key: build-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Branch }}-{{ checksum "build.gradle" }}
      - run:
          name: Print Gradle version
          command: |
            ./gradlew version
      - store_artifacts:
          path: build/reports
          destination: reports
      - store_test_results:
          path: build/test-results
      - save_cache:
          key: build-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Branch }}-{{ checksum "build.gradle" }}
          paths:
            - ~/.gradle
            -
workflows:
  build-develop:
    jobs:
      - build:
          context:
            - aws-global
            - nvirginia-test
          filters:
            branches:
              only:
                - develop
  build-prod:
    jobs:
      - build:
          context:
            - aws-global
            - dublin-prod
          filters:
            branches:
              only:
                - main
                - /^feature.*/
  print-version:
    when: << pipeline.parameters.run_print_version >>
    jobs:
      - print-version:
          context:
            - aws-global
            - dublin-prod
