import com.amazonaws.auth.AWSCredentials
import com.amazonaws.auth.DefaultAWSCredentialsProviderChain

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("com.amazonaws:aws-java-sdk-core:${awsVersion}")
        classpath("com.amazonaws:aws-java-sdk-s3:${awsVersion}")
        classpath("org.yaml:snakeyaml:2.3")
    }
}

plugins {
    id 'base'
    id 'java'
    id 'java-library'
    id 'maven-publish'
}

tasks.register('generateDTOs') {
    dependsOn tasks.clean
    doLast {
        io.bokun.octo.gradle.GenerateDTOsTask.generateDTOs(
                project.projectDir.toString() + "/OCTO-API.yaml",
                buildDir.toString()
        );
    }
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenLocal()
    mavenCentral()
}

dependencies {
//    testImplementation(platform('org.junit:junit-bom:5.9.2'))
//    testImplementation('org.junit.jupiter:junit-jupiter')
    testImplementation 'junit:junit:4.13.1'
    testImplementation "org.openapitools:jackson-databind-nullable:0.2.6"

    compileOnly("com.google.code.findbugs:annotations:3.0.1")
}

ext {
    buildNo = System.getenv().getOrDefault("CIRCLE_SHA1","buildNo")
    repositoryName = System.getenv().getOrDefault("CIRCLE_PROJECT_REPONAME","repositoryName")
    repositoryBranch = System.getenv().getOrDefault("CIRCLE_BRANCH","repositoryBranch")
}

ext.sharedManifest = java.manifest {
    attributes(
            "Implementation-Title": project.name,
            "Implementation-Version": project.version,
            "Build-Jdk-Spec": java.sourceCompatibility,
            "Target-Jdk-Spec": java.targetCompatibility,
            "CircleCI-SH1": buildNo,
            "Repository-Name": repositoryName,
            "Repository-Branch": repositoryBranch
    )
}

compileJava {
    options.encoding = 'UTF-8'
    dependsOn tasks.generateDTOs
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
    withJavadocJar()
    withSourcesJar()
}

sourceSets {
    main {
        java {
            srcDir "$buildDir/generatedDTOs".toString() + "/src/main/java"
        }
    }
}

jar {
    dependsOn compileJava
    manifest = java.manifest {
        from sharedManifest
    }
}

sourcesJar {
    dependsOn compileJava
    manifest = java.manifest {
        from sharedManifest
    }
}

javadocJar {
    dependsOn compileJava
    manifest = java.manifest {
        from sharedManifest
    }
}

//AWSCredentials awsCredentials = DefaultAWSCredentialsProviderChain.getInstance().credentials;
//
//build.dependsOn tasks.generateAndStripDeps
//
//if (awsCredentials != null) {
//    println("publish : " + awsCredentials.AWSAccessKeyId)
//    publishing {
//        println "Will publish to Bokun private S3 repository"
//        publications {
//            restV2(MavenPublication) {
//                from components.java
//            }
//        }
//        repositories {
//            maven {
//                if (project.version.endsWith('-SNAPSHOT')) {
//                    url "s3://pmr.bokun.io/snapshots" // TODO change to : s3://public-pmr.bokun.io/snapshots
//                } else {
//                    url "s3://pmr.bokun.io/release"  // TODO change to : s3://public-pmr.bokun.io/release
//                }
//                credentials(AwsCredentials) {
//                    accessKey awsCredentials.AWSAccessKeyId
//                    secretKey awsCredentials.AWSSecretKey
//                }
//            }
//        }
//    }
//} else {
//    println "AWS Credentials not found."
//}